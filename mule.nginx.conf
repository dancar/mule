server {
  listen   80  default_server;
  server_name  _;

  if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE)$) {
    return 403;
  }

  set $mule_queues '/home/trusteer/mule/shared/queues';
  set $mule_static_files '/home/trusteer/mule/code/muleview/build/production/';
  set $mule_host_port 'localhost:8980';

  location /mule/api/graph {
    # for POST this will save the file into mule_incoming it'll later be read by mule
    limit_except GET POST  { deny all; }
    client_body_temp_path  $mule_queues/mule_work;
    client_body_in_file_only   on;
    client_body_buffer_size 128K;
    client_max_body_size 1000M;
    lua_need_request_body on;

    if ( $request_method = "POST" ) {
      content_by_lua '
        ngx.req.read_body()
        local base_name = string.match(ngx.req.get_body_file(),"/([^/]*)$")
        local out = io.open(ngx.req.get_body_file()..".tmp","wb")
        local content = io.open(ngx.req.get_body_file(),"rb"):read("*all")
        out:write(content)
        out:close()
        os.rename(ngx.req.get_body_file()..".tmp",ngx.var.mule_queues.."/mule_incoming/"..base_name..".mule")
        ngx.exit(ngx.OK)
      ';
    }
    gzip_proxied any;
    proxy_pass http://$mule_host_port/;
  }

  location  /mule/api/ {
    gzip_proxied any;
    proxy_pass http://$mule_host_port/;
  }

  rewrite ^/mule$ /mule/ permanent;

  location /mule/ {
    # change the path as necessary
    index index.html;
    alias $mule_static_files;
  }

}
