// Generated by CoffeeScript 1.6.1
(function() {

  Ext.define("Muleview.ParsedRetention", {
    statics: {
      units: [["s", "seconds"], ["m", "minutes"], ["h", "hours"], ["d", "days"], ["y", "years"]]
    },
    parseOne: function(rawTimeUnit) {
      var count, ind, letter, letterIndex, name, unitLetter, unitName, _all, _i, _len, _ref, _ref1, _ref2;
      _ref = rawTimeUnit.match(/(\d+)([mhsdy])/), _all = _ref[0], count = _ref[1], letter = _ref[2];
      name = null;
      _ref1 = this.self.units;
      for (ind = _i = 0, _len = _ref1.length; _i < _len; ind = ++_i) {
        _ref2 = _ref1[ind], unitLetter = _ref2[0], unitName = _ref2[1];
        if (letter === unitLetter) {
          name = unitName;
          letterIndex = ind;
        }
      }
      if (count = 1) {
        name = name.substring(0, name.length - 1);
      }
      return {
        name: name,
        count: parseInt(count),
        letter: letter,
        letterValue: letterIndex
      };
    },
    constructor: function(ret) {
      var last, split;
      split = ret.split(":");
      last = split[1];
      this.bucket = this.parseOne(split[0]);
      this.total = this.parseOne(split[1]);
      this.title = this.getTitle();
      this.value = this.getValue();
      return this;
    },
    getTitle: function() {
      return "Last " + this.total.count + " " + this.total.name;
    },
    getValue: function() {
      var ans, base, element, elements, ind, _i, _len;
      base = 1000;
      ans = 0;
      elements = [this.bucket.count, this.bucket.letterValue, this.total.count, this.total.letterValue];
      for (ind = _i = 0, _len = elements.length; _i < _len; ind = ++_i) {
        element = elements[ind];
        ans += Math.pow(base, ind) * element;
      }
      return ans;
    }
  });

}).call(this);
