// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty;

  Ext.define("Muleview.Mule", {
    singleton: true,
    getAlertCommandUrl: function(key, retention) {
      return this.prefix() + ("alert/" + key + ";" + retention);
    },
    prefix: function() {
      return Muleview.Settings.muleUrlPrefix;
    },
    askMule: function(command, fn) {
      var _this = this;
      Muleview.event("commandSent", command);
      return Ext.Ajax.request({
        url: this.prefix() + command,
        success: function(response) {
          Muleview.event("commandReceived", command);
          return fn(JSON.parse(response.responseText).data);
        }
      });
    },
    getSubKeys: function(parent, depth, callback) {
      return this.askMule("key/" + parent + "?level=" + depth, function(retentions) {
        var key, keyName, keys, ret, _i, _len;
        keys = {};
        for (_i = 0, _len = retentions.length; _i < _len; _i++) {
          ret = retentions[_i];
          key = ret.substring(0, ret.indexOf(";"));
          keys[key] = true;
        }
        return callback((function() {
          var _results;
          _results = [];
          for (keyName in keys) {
            if (!__hasProp.call(keys, keyName)) continue;
            _results.push(keyName);
          }
          return _results;
        })());
      });
    },
    getKeyData: function(key, callback) {
      var _this = this;
      return this.askMule("graph/" + key + "?alerts=true", function(response) {
        var alerts, data, keyData, keys, name, retention, _ref;
        keys = [];
        keyData = {};
        alerts = null;
        for (name in response) {
          if (!__hasProp.call(response, name)) continue;
          data = response[name];
          if (name === "alerts") {
            alerts = data;
          } else {
            _ref = name.split(";"), key = _ref[0], retention = _ref[1];
            keys.push(key);
            keyData[retention] || (keyData[retention] = {});
            keyData[retention][key] = data;
          }
        }
        Muleview.event("keysReceived", keys);
        return callback(keyData, alerts);
      });
    }
  });

}).call(this);
