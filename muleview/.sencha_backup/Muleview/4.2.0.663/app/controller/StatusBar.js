// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty;

  Ext.define("Muleview.controller.StatusBar", {
    extend: "Ext.app.Controller",
    refs: [
      {
        ref: "sb",
        selector: "#statusBar"
      }, {
        ref: "lastRefreshLabel",
        selector: "#lastRefreshLabel"
      }
    ],
    onLaunch: function() {
      var eventName, eventsConf, handler, _ref;
      eventsConf = {
        scope: this
      };
      _ref = this.handlers;
      for (eventName in _ref) {
        if (!__hasProp.call(_ref, eventName)) continue;
        handler = _ref[eventName];
        eventsConf[eventName] = Ext.bind(handler, this);
      }
      return Muleview.Events.on(eventsConf);
    },
    progress: function(txt) {
      return this.status({
        iconCls: "x-status-busy",
        text: txt,
        clear: false
      });
    },
    success: function(txt) {
      return this.status({
        iconCls: "x-status-valid",
        text: txt
      });
    },
    status: function(conf) {
      if (Ext.isString(conf)) {
        conf = {
          text: conf
        };
      }
      Ext.applyIf(conf, {
        iconCls: "",
        clear: {
          anim: false,
          wait: 3000,
          useDefaults: true
        }
      });
      return this.getSb().setStatus(conf);
    },
    timeFormat: function(timestamp) {
      return Ext.Date.format(new Date(timestamp * 1000), Muleview.Settings.statusTimeFormat);
    },
    updateLastRefresh: function() {
      var timeStr;
      timeStr = Ext.Date.format(new Date(), Muleview.Settings.statusTimeFormat);
      return this.getLastRefreshLabel().setText("Last updated: " + timeStr);
    },
    handlers: {
      commandSent: function(command) {
        return this.progress("Requested: " + command);
      },
      commandReceived: function(command) {
        return this.success("Received request: " + command);
      },
      chartItemMouseOver: function(item) {
        return this.status(this.timeFormat(item.storeItem.get("timestamp")));
      },
      graphsCreated: function() {
        return this.updateLastRefresh();
      }
    }
  });

}).call(this);
